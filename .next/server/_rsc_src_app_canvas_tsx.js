"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_app_canvas_tsx";
exports.ids = ["_rsc_src_app_canvas_tsx"];
exports.modules = {

/***/ "(rsc)/./src/app/canvas.tsx":
/*!****************************!*\
  !*** ./src/app/canvas.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CanvasComponent: () => (/* binding */ e0)\n/* harmony export */ });\n/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js\");\n\n\nconst e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/cort/coding/wk5/ce_genArt/src/app/canvas.tsx#CanvasComponent`);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2NhbnZhcy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW5hcnRfc2l0ZS8uL3NyYy9hcHAvY2FudmFzLnRzeD8wYjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbmRlciBjbGllbnQgc2lkZSBvbmx5XG5cInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5cbi8vIGltcG9ydCBuZWNlc3NhcnkgY29tcG9uZW50cyBhbmQgaG9va3NcbmltcG9ydCB7IFN1c3BlbnNlLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VGcmFtZSwgQ2FudmFzLCB1c2VMb2FkZXIgfSBmcm9tIFwiQHJlYWN0LXRocmVlL2ZpYmVyXCI7XG5pbXBvcnQgeyBPcmJpdENvbnRyb2xzLCBQZXJzcGVjdGl2ZUNhbWVyYSB9IGZyb20gXCJAcmVhY3QtdGhyZWUvZHJlaVwiO1xuaW1wb3J0IHsgTWVzaCwgVGV4dHVyZUxvYWRlciwgU2hhZGVyTWF0ZXJpYWwgfSBmcm9tIFwidGhyZWVcIjtcblxuLy8gY3VzdG9tIG1hdGVyaWFsXG5pbXBvcnQgXCIuL21hdGVyaWFsXCI7IC8vIEltcG9ydGFudDogVGhpcyBuZWVkcyB0byBiZSBpbXBvcnRlZCBmaXJzdFxuXG4vLyBkZWZpbmUgcHJvcCB0eXBlcyBmb3IgUm90YXRlU2NlbmVcbmludGVyZmFjZSBSb3RhdGVTY2VuZVByb3BzIHtcbiAgcG9zaXRpb246IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgc2NhbGU/OiBudW1iZXI7XG4gIHJvd0luZGV4OiBudW1iZXI7XG4gIGNvbEluZGV4OiBudW1iZXI7XG4gIGRlcHRoSW5kZXg6IG51bWJlcjtcbn1cblxuLy8gZGVmaW5lcyB3aGF0IDNkIG9iamVjdHMgYXJlIGluIHRoZSBzY2VuZVxuZnVuY3Rpb24gUm90YXRlU2NlbmUoe1xuICBwb3NpdGlvbixcbiAgc2NhbGUgPSAxLFxuICByb3dJbmRleCxcbiAgY29sSW5kZXgsXG4gIGRlcHRoSW5kZXgsXG59OiBSb3RhdGVTY2VuZVByb3BzKSB7XG4gIC8vIGN1cnJlbnQgLT4gYWNjZXNzZXMgdGhlIG1lc2ggaW5zdGFuY2VcbiAgY29uc3QgbWVzaFJvdGF0ZSA9IHVzZVJlZjxNZXNoPihudWxsKTsgLy8gY3JlYXRlcyBhIHJlZmVyZW5jZSB0byB0aGUgM2QgbWVzaFxuICBjb25zdCBtYXRlcmlhbFJlZiA9IHVzZVJlZjxTaGFkZXJNYXRlcmlhbD4obnVsbCk7XG5cbiAgLy8gc3RhdGUgZm9yIGludGVyYWN0aXZlIGZlYXR1cmVzXG4gIGNvbnN0IFtob3ZlcmVkLCBzZXRIb3ZlcmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2NsaWNrZWQsIHNldENsaWNrZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIGFuaW1hdGlvbiBsb29wIC0gZXZlcnkgZnJhbWUgcm90YXRlcyB0aGUgYm94IGJ5IC4wMSByYWRpYW5zXG4gIHVzZUZyYW1lKChzdGF0ZSkgPT4ge1xuICAgIGlmIChtZXNoUm90YXRlLmN1cnJlbnQpIHtcbiAgICAgIG1lc2hSb3RhdGUuY3VycmVudC5yb3RhdGlvbi55ICs9IDAuMDE7XG4gICAgICAvLyByb3RhdGUgZmFzdGVyIHdoZW4gY2xpY2tlZFxuICAgICAgaWYgKGNsaWNrZWQpIHtcbiAgICAgICAgbWVzaFJvdGF0ZS5jdXJyZW50LnJvdGF0aW9uLnkgKz0gMC4wNTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1hdGVyaWFsUmVmLmN1cnJlbnQpIHtcbiAgICAgIG1hdGVyaWFsUmVmLmN1cnJlbnQudW5pZm9ybXMudGltZS52YWx1ZSA9IHN0YXRlLmNsb2NrLmVsYXBzZWRUaW1lO1xuICAgICAgbWF0ZXJpYWxSZWYuY3VycmVudC51bmlmb3Jtcy5wb3NpdGlvbkluZGV4LnZhbHVlID0gbmV3IFRIUkVFLlZlY3RvcjIoXG4gICAgICAgIGNvbEluZGV4LFxuICAgICAgICByb3dJbmRleFxuICAgICAgKTtcbiAgICAgIG1hdGVyaWFsUmVmLmN1cnJlbnQudW5pZm9ybXMudG90YWxDdWJlcy52YWx1ZSA9IG5ldyBUSFJFRS5WZWN0b3IyKDUwLCA1MCk7XG4gICAgICBtYXRlcmlhbFJlZi5jdXJyZW50LnVuaWZvcm1zLmRlcHRoSW5kZXgudmFsdWUgPSBkZXB0aEluZGV4O1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICAvLyBjcmVhdGUgM2QgbWVzaCAmIGF0dGFjaGVzIHJlZmVyZW5jZSB0byBpdFxuICAgIDxtZXNoXG4gICAgICByZWY9e21lc2hSb3RhdGV9XG4gICAgICBwb3NpdGlvbj17cG9zaXRpb259XG4gICAgICAvLyBhZGQgaW50ZXJhY3Rpb24gaGFuZGxlcnNcbiAgICAgIG9uQ2xpY2s9eygpID0+IHNldENsaWNrZWQoIWNsaWNrZWQpfVxuICAgICAgb25Qb2ludGVyT3Zlcj17KCkgPT4gc2V0SG92ZXJlZCh0cnVlKX1cbiAgICAgIG9uUG9pbnRlck91dD17KCkgPT4gc2V0SG92ZXJlZChmYWxzZSl9XG4gICAgICBzY2FsZT17aG92ZXJlZCA/IHNjYWxlICogMS41IDogc2NhbGV9IC8vIHNjYWxlIHVwIHdoZW4gaG92ZXJlZFxuICAgICAgY2FzdFNoYWRvd1xuICAgICAgcmVjZWl2ZVNoYWRvd1xuICAgID5cbiAgICAgIHsvKiogYWRkIGEgYm94IGdlb21ldHJ5IHRvIHRoZSBtZXNoIGRpbWVuc2lvbiAyLTItMiAqL31cbiAgICAgIDxib3hHZW9tZXRyeSBhcmdzPXtbMiwgMiwgMl19IC8+XG4gICAgICB7LyoqIGFwcGx5IG1hdGVyaWFsIHdpdGggaW50ZXJhY3RpdmUgY29sb3JzICovfVxuICAgICAgPG5vaXNlU2hhZGVyTWF0ZXJpYWwgcmVmPXttYXRlcmlhbFJlZn0gLz5cbiAgICA8L21lc2g+XG4gICk7XG59XG5cbi8vIGRlZmluZSBtYWluIGNhbnZhcyBjb21wb25lbnRcbmV4cG9ydCBmdW5jdGlvbiBDYW52YXNDb21wb25lbnQoKSB7XG4gIHJldHVybiAoXG4gICAgLy8gY3JlYXRlIGEgY29udGFpbmVyIGRpdiBmb3IgdGhlIGNhbnZhc1xuICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6IFwiMTAwJVwiLCBoZWlnaHQ6IFwiMTAwdndcIiB9fT5cbiAgICAgIHsvKiogUjNGIGNhbnZhcyBjb21wb25lbnQgd2hpY2ggc2V0cyBUaHJlZS5qcyBzY2VuZSAqL31cbiAgICAgIDxDYW52YXMgc2hhZG93cyBnbD17eyBhbnRpYWxpYXM6IHRydWUgfX0+XG4gICAgICAgIDxQZXJzcGVjdGl2ZUNhbWVyYSBtYWtlRGVmYXVsdCBwb3NpdGlvbj17WzAsIDIwLCAxMDBdfSBmb3Y9ezYwfSAvPlxuICAgICAgICB7LyoqIGFkZCBhbWJpZW50IGxpZ2h0IHRvIHNjZW5lIGZvciBnZW5lcmFsIGlsbHVtaW5hdGlvbiAqL31cbiAgICAgICAgPGFtYmllbnRMaWdodCBpbnRlbnNpdHk9ezAuNX0gLz5cbiAgICAgICAgPHBvaW50TGlnaHQgcG9zaXRpb249e1sxMCwgMTAsIDZdfSBjb2xvcj1cInJlZFwiIC8+XG5cbiAgICAgICAgey8qIC8vIGdyb3VuZCBwbGFuZSBmb3Igc2hhZG93cyAgKi99XG4gICAgICAgIDxtZXNoXG4gICAgICAgICAgcm90YXRpb249e1stTWF0aC5QSSAvIDIsIDAsIDBdfVxuICAgICAgICAgIHBvc2l0aW9uPXtbMCwgLTIwLCAwXX1cbiAgICAgICAgICByZWNlaXZlU2hhZG93XG4gICAgICAgID5cbiAgICAgICAgICB7LyogLy8gZ3JpZCAgKi99XG4gICAgICAgICAgey8qIDxwbGFuZUdlb21ldHJ5IGFyZ3M9e1szMDAsIDMwMF19IC8+ICovfVxuICAgICAgICAgIHsvKiA8bWVzaFN0YW5kYXJkTWF0ZXJpYWwgY29sb3I9XCIjNjY2NjY2XCIgLz4gKi99XG5cbiAgICAgICAgICA8bm9pc2VTaGFkZXJNYXRlcmlhbCAvPlxuICAgICAgICA8L21lc2g+XG5cbiAgICAgICAgey8qIC8vIDNkIGdyaWQgYXJyYXkgICovfVxuICAgICAgICB7QXJyYXkuZnJvbSh7IGxlbmd0aDogMyB9KS5tYXAoKF8sIGRlcHRoSW5kZXgpID0+XG4gICAgICAgICAgQXJyYXkuZnJvbSh7IGxlbmd0aDogNTAgfSkubWFwKChfLCByb3dJbmRleCkgPT4ge1xuICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIHNjYWxlIGJhc2VkIG9uIHJvdyAoc21hbGxlciBhcyB3ZSBnbyB1cClcbiAgICAgICAgICAgIGNvbnN0IHNjYWxlID0gMSAtIHJvd0luZGV4ICogMC4wNTsgLy8gV2lsbCBnbyBmcm9tIDEgdG8gMC4wNVxuICAgICAgICAgICAgLy8gZWFjaCByb3dcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiA1MCB9KS5tYXAoKF8sIGNvbEluZGV4KSA9PiAoXG4gICAgICAgICAgICAgIDxSb3RhdGVTY2VuZVxuICAgICAgICAgICAgICAgIGtleT17YCR7ZGVwdGhJbmRleH0tJHtyb3dJbmRleH0tJHtjb2xJbmRleH1gfVxuICAgICAgICAgICAgICAgIC8vIFBvc2l0aW9uIGN1YmVzIHdpdGggNCB1bml0cyBzcGFjaW5nLCBjZW50ZXJlZCBhdCAwXG4gICAgICAgICAgICAgICAgcG9zaXRpb249e1tcbiAgICAgICAgICAgICAgICAgIChjb2xJbmRleCAtIDI1KSAqIDIsIC8vIFggcG9zaXRpb24gKGhvcml6b250YWwpXG4gICAgICAgICAgICAgICAgICAocm93SW5kZXggLSAyNSkgKiAyLCAvLyBZIHBvc2l0aW9uICh2ZXJ0aWNhbClcbiAgICAgICAgICAgICAgICAgIChkZXB0aEluZGV4IC0gMSkgKiAxMCwgLy8gWiBwb3NpdGlvbiAoZGVwdGgpXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzY2FsZT17c2NhbGV9IC8vIFBhc3Mgc2NhbGUgYXMgcHJvcFxuICAgICAgICAgICAgICAgIHJvd0luZGV4PXtyb3dJbmRleH1cbiAgICAgICAgICAgICAgICBjb2xJbmRleD17Y29sSW5kZXh9XG4gICAgICAgICAgICAgICAgZGVwdGhJbmRleD17ZGVwdGhJbmRleH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkpO1xuICAgICAgICAgIH0pXG4gICAgICAgICl9XG5cbiAgICAgICAgey8qKiBhZGQgb3JiaXQgY29udHJvbHMgZm9yIGNhbWVyYSBtYW5pcHVsYXRpb24gKi99XG4gICAgICAgIDxPcmJpdENvbnRyb2xzXG4gICAgICAgICAgZW5hYmxlUGFuPXtmYWxzZX1cbiAgICAgICAgICBtaW5EaXN0YW5jZT17MTB9XG4gICAgICAgICAgbWF4RGlzdGFuY2U9ezEwMH1cbiAgICAgICAgICBtaW5Qb2xhckFuZ2xlPXtNYXRoLlBJIC8gNH1cbiAgICAgICAgICBtYXhQb2xhckFuZ2xlPXtNYXRoLlBJIC8gMS41fVxuICAgICAgICAgIHRhcmdldD17WzAsIDAsIDBdfVxuICAgICAgICAvPlxuICAgICAgICA8Zm9nIGF0dGFjaD1cImZvZ1wiIGFyZ3M9e1tcIiMwMDAwMDBcIiwgNDAsIDIwMF19IC8+XG4gICAgICA8L0NhbnZhcz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/canvas.tsx\n");

/***/ })

};
;