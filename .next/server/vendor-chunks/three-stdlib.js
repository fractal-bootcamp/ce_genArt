"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/three-stdlib";
exports.ids = ["vendor-chunks/three-stdlib"];
exports.modules = {

/***/ "(ssr)/./node_modules/three-stdlib/controls/OrbitControls.js":
/*!*************************************************************!*\
  !*** ./node_modules/three-stdlib/controls/OrbitControls.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapControls: () => (/* binding */ MapControls),\n/* harmony export */   OrbitControls: () => (/* binding */ OrbitControls)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nconst _ray = new three__WEBPACK_IMPORTED_MODULE_0__.Ray();\nconst _plane = new three__WEBPACK_IMPORTED_MODULE_0__.Plane();\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180));\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    __publicField(this, \"zoomToCursor\", false);\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE,\n      MIDDLE: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY,\n      RIGHT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE, TWO: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      const up = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0);\n      const quat = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      const lastQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        if (!scope.object.matrixAutoUpdate)\n          scope.object.updateMatrix();\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            const mouseBefore = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\");\n            scope.zoomToCursor = false;\n          }\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1;\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n          }\n        }\n        scale = 1;\n        performCursorZoom = false;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerUp);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = \"auto\";\n      }\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerUp);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    const sphericalDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    let scale = 1;\n    const panOffset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const rotateStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const rotateEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const rotateDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyDirection = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const mouse = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale /= dollyScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale *= dollyScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;\n    this.mouseButtons.RIGHT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;\n    this.touches.ONE = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;\n    this.touches.TWO = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;\n  }\n}\n\n//# sourceMappingURL=OrbitControls.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/three-stdlib/controls/OrbitControls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/three-stdlib/controls/TransformControls.js":
/*!*****************************************************************!*\
  !*** ./node_modules/three-stdlib/controls/TransformControls.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransformControls: () => (/* binding */ TransformControls),\n/* harmony export */   TransformControlsGizmo: () => (/* binding */ TransformControlsGizmo),\n/* harmony export */   TransformControlsPlane: () => (/* binding */ TransformControlsPlane)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nclass TransformControls extends three__WEBPACK_IMPORTED_MODULE_0__.Object3D {\n  constructor(camera, domElement) {\n    super();\n    __publicField(this, \"isTransformControls\", true);\n    __publicField(this, \"visible\", false);\n    __publicField(this, \"domElement\");\n    __publicField(this, \"raycaster\", new three__WEBPACK_IMPORTED_MODULE_0__.Raycaster());\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"plane\");\n    __publicField(this, \"tempVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"tempVector2\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"tempQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"unit\", {\n      X: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(1, 0, 0),\n      Y: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0),\n      Z: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1)\n    });\n    __publicField(this, \"pointStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"pointEnd\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"offset\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"rotationAxis\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"startNorm\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"endNorm\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"rotationAngle\", 0);\n    __publicField(this, \"cameraPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"cameraQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"cameraScale\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"parentPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"parentQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"parentQuaternionInv\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"parentScale\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldPositionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldQuaternionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"worldScaleStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"worldQuaternionInv\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"worldScale\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"eye\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"positionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"quaternionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"scaleStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"camera\");\n    __publicField(this, \"object\");\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"translationSnap\", null);\n    __publicField(this, \"rotationSnap\", null);\n    __publicField(this, \"scaleSnap\", null);\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // events\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"mouseDownEvent\", { type: \"mouseDown\", mode: this.mode });\n    __publicField(this, \"mouseUpEvent\", { type: \"mouseUp\", mode: this.mode });\n    __publicField(this, \"objectChangeEvent\", { type: \"objectChange\" });\n    __publicField(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    // Set current object\n    __publicField(this, \"attach\", (object) => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n    // Detatch from object\n    __publicField(this, \"detach\", () => {\n      this.object = void 0;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n    // Reset\n    __publicField(this, \"reset\", () => {\n      if (!this.enabled)\n        return this;\n      if (this.dragging) {\n        if (this.object !== void 0) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n      return this;\n    });\n    __publicField(this, \"updateMatrixWorld\", () => {\n      if (this.object !== void 0) {\n        this.object.updateMatrixWorld();\n        if (this.object.parent === null) {\n          console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n    __publicField(this, \"pointerHover\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n    __publicField(this, \"pointerDown\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true || pointer.button !== 0)\n        return;\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n        if (planeIntersect) {\n          let space = this.space;\n          if (this.mode === \"scale\") {\n            space = \"local\";\n          } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n            space = \"world\";\n          }\n          if (space === \"local\" && this.mode === \"rotate\") {\n            const snap = this.rotationSnap;\n            if (this.axis === \"X\" && snap)\n              this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === \"Y\" && snap)\n              this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === \"Z\" && snap)\n              this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n          this.object.updateMatrixWorld();\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n    __publicField(this, \"pointerMove\", (pointer) => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n      if (mode === \"scale\") {\n        space = \"local\";\n      } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n        space = \"world\";\n      }\n      if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect)\n        return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n      if (mode === \"translate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n        if (axis.indexOf(\"X\") === -1)\n          this.offset.x = 0;\n        if (axis.indexOf(\"Y\") === -1)\n          this.offset.y = 0;\n        if (axis.indexOf(\"Z\") === -1)\n          this.offset.z = 0;\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n        object.position.copy(this.offset).add(this.positionStart);\n        if (this.translationSnap) {\n          if (space === \"local\") {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n          if (space === \"world\") {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === \"scale\") {\n        if (axis.search(\"XYZ\") !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0)\n            d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n          if (axis.search(\"X\") === -1) {\n            this.tempVector2.x = 1;\n          }\n          if (axis.search(\"Y\") === -1) {\n            this.tempVector2.y = 1;\n          }\n          if (axis.search(\"Z\") === -1) {\n            this.tempVector2.z = 1;\n          }\n        }\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n        if (this.scaleSnap && this.object) {\n          if (axis.search(\"X\") !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === \"rotate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n        if (axis === \"E\") {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === \"XYZE\") {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n          if (space === \"local\") {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        }\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        }\n        if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n    __publicField(this, \"pointerUp\", (pointer) => {\n      if (pointer.button !== 0)\n        return;\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n      this.dragging = false;\n      this.axis = null;\n    });\n    __publicField(this, \"getPointer\", (event) => {\n      var _a;\n      if (this.domElement && ((_a = this.domElement.ownerDocument) == null ? void 0 : _a.pointerLockElement)) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = this.domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    __publicField(this, \"onPointerHover\", (event) => {\n      if (!this.enabled)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n    __publicField(this, \"onPointerDown\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"none\";\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerMove\", (event) => {\n      if (!this.enabled)\n        return;\n      this.pointerMove(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerUp\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"\";\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n    __publicField(this, \"getMode\", () => this.mode);\n    __publicField(this, \"setMode\", (mode) => {\n      this.mode = mode;\n    });\n    __publicField(this, \"setTranslationSnap\", (translationSnap) => {\n      this.translationSnap = translationSnap;\n    });\n    __publicField(this, \"setRotationSnap\", (rotationSnap) => {\n      this.rotationSnap = rotationSnap;\n    });\n    __publicField(this, \"setScaleSnap\", (scaleSnap) => {\n      this.scaleSnap = scaleSnap;\n    });\n    __publicField(this, \"setSize\", (size) => {\n      this.size = size;\n    });\n    __publicField(this, \"setSpace\", (space) => {\n      this.space = space;\n    });\n    __publicField(this, \"update\", () => {\n      console.warn(\n        \"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\"\n      );\n    });\n    __publicField(this, \"connect\", (domElement) => {\n      if (domElement === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"pointermove\", this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n    });\n    __publicField(this, \"dispose\", () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = this.domElement) == null ? void 0 : _a.removeEventListener(\"pointerdown\", this.onPointerDown);\n      (_b = this.domElement) == null ? void 0 : _b.removeEventListener(\"pointermove\", this.onPointerHover);\n      (_d = (_c = this.domElement) == null ? void 0 : _c.ownerDocument) == null ? void 0 : _d.removeEventListener(\"pointermove\", this.onPointerMove);\n      (_f = (_e = this.domElement) == null ? void 0 : _e.ownerDocument) == null ? void 0 : _f.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.traverse((child) => {\n        const mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane);\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function() {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function(value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({ type: propName + \"-changed\", value });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      });\n      this[propName] = defaultValue;\n      this.plane[propName] = defaultValue;\n      this.gizmo[propName] = defaultValue;\n    };\n    defineProperty(\"camera\", this.camera);\n    defineProperty(\"object\", this.object);\n    defineProperty(\"enabled\", this.enabled);\n    defineProperty(\"axis\", this.axis);\n    defineProperty(\"mode\", this.mode);\n    defineProperty(\"translationSnap\", this.translationSnap);\n    defineProperty(\"rotationSnap\", this.rotationSnap);\n    defineProperty(\"scaleSnap\", this.scaleSnap);\n    defineProperty(\"space\", this.space);\n    defineProperty(\"size\", this.size);\n    defineProperty(\"dragging\", this.dragging);\n    defineProperty(\"showX\", this.showX);\n    defineProperty(\"showY\", this.showY);\n    defineProperty(\"showZ\", this.showZ);\n    defineProperty(\"worldPosition\", this.worldPosition);\n    defineProperty(\"worldPositionStart\", this.worldPositionStart);\n    defineProperty(\"worldQuaternion\", this.worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", this.worldQuaternionStart);\n    defineProperty(\"cameraPosition\", this.cameraPosition);\n    defineProperty(\"cameraQuaternion\", this.cameraQuaternion);\n    defineProperty(\"pointStart\", this.pointStart);\n    defineProperty(\"pointEnd\", this.pointEnd);\n    defineProperty(\"rotationAxis\", this.rotationAxis);\n    defineProperty(\"rotationAngle\", this.rotationAngle);\n    defineProperty(\"eye\", this.eye);\n    if (domElement !== void 0)\n      this.connect(domElement);\n  }\n}\nclass TransformControlsGizmo extends three__WEBPACK_IMPORTED_MODULE_0__.Object3D {\n  constructor() {\n    super();\n    __publicField(this, \"isTransformControlsGizmo\", true);\n    __publicField(this, \"type\", \"TransformControlsGizmo\");\n    __publicField(this, \"tempVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0));\n    __publicField(this, \"tempEuler\", new three__WEBPACK_IMPORTED_MODULE_0__.Euler());\n    __publicField(this, \"alignVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0));\n    __publicField(this, \"zeroVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0));\n    __publicField(this, \"lookAtMatrix\", new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4());\n    __publicField(this, \"tempQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"tempQuaternion2\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"identityQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"unitX\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1));\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"picker\");\n    __publicField(this, \"helper\");\n    // these are set from parent class TransformControls\n    __publicField(this, \"rotationAxis\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"cameraPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldPositionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldQuaternionStart\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"worldPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"eye\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"camera\", null);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // updateMatrixWorld will update transformations and appearance of individual handles\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      if (this.mode === \"scale\") {\n        space = \"local\";\n      }\n      const quaternion = space === \"local\" ? this.worldQuaternion : this.identityQuaternion;\n      this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n      this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n      this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n      this.helper[\"translate\"].visible = this.mode === \"translate\";\n      this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n      this.helper[\"scale\"].visible = this.mode === \"scale\";\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i];\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n        if (handle.tag === \"helper\") {\n          handle.visible = false;\n          if (handle.name === \"AXIS\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n            if (this.axis === \"X\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Y\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Z\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"XYZE\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(\n                this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY)\n              );\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n            if (this.axis === \"E\") {\n              handle.visible = false;\n            }\n          } else if (handle.name === \"START\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"END\") {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"DELTA\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          }\n          continue;\n        }\n        handle.quaternion.copy(quaternion);\n        if (this.mode === \"translate\" || this.mode === \"scale\") {\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0;\n          if (handle.name === \"X\" || handle.name === \"XYZX\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Y\" || handle.name === \"XYZY\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Z\" || handle.name === \"XYZZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XY\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"YZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"X\") !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Y\") !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Z\") !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === \"rotate\") {\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search(\"E\") !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n          if (handle.name === \"X\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Y\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Z\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        }\n        handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity;\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone();\n        handle.material.color.copy(handle.material.tempColor);\n        handle.material.opacity = handle.material.tempOpacity;\n        if (!this.enabled) {\n          handle.material.opacity *= 0.5;\n          handle.material.color.lerp(new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 1), 0.5);\n          } else if (this.axis.split(\"\").some(function(a) {\n            return handle.name === a;\n          })) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 1), 0.5);\n          } else {\n            handle.material.opacity *= 0.25;\n            handle.material.color.lerp(new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n      super.updateMatrixWorld();\n    });\n    const gizmoMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(255);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(16776960);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(65535);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(16711935);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(16776960);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(16711680);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(65280);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(255);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(65535);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(16711935);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(16776960);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(7895160);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n    const arrowGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n      const vertices = [];\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute(vertices, 3));\n      return geometry;\n    };\n    const TranslateHelperGeometry = () => {\n      const geometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n      geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    };\n    const gizmoTranslate = {\n      X: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, \"fwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, \"bwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineRed)]\n      ],\n      Y: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, \"fwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, \"bwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]\n      ],\n      Z: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, \"fwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, \"bwd\"],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]\n      ],\n      XYZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [\n          new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0]\n        ],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ]\n    };\n    const pickerTranslate = {\n      X: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      END: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      DELTA: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]],\n      X: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const gizmoRotate = {\n      X: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(CircleGeometry(1, 0.5), matLineRed)],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]\n      ],\n      Y: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]\n      ],\n      Z: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]\n      ],\n      E: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]],\n        [\n          new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [1.17, 0, 0],\n          [0, 0, -Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [-1.17, 0, 0],\n          [0, 0, Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, -1.17, 0],\n          [Math.PI, 0, 0],\n          [1, 1, 1e-3]\n        ],\n        [\n          new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, 1.17, 0],\n          [0, 0, 0],\n          [1, 1, 1e-3]\n        ]\n      ],\n      XYZE: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]]\n    };\n    const pickerRotate = {\n      X: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]\n      ],\n      Y: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]\n      ],\n      Z: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]\n      ],\n      XY: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]],\n        [new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XYZX: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new three__WEBPACK_IMPORTED_MODULE_0__.Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const setupGizmo = (gizmoMap) => {\n      const gizmo = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D();\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n}\nclass TransformControlsPlane extends three__WEBPACK_IMPORTED_MODULE_0__.Mesh {\n  constructor() {\n    super(\n      new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1e5, 1e5, 2, 2),\n      new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({\n        visible: false,\n        wireframe: true,\n        side: three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide,\n        transparent: true,\n        opacity: 0.1,\n        toneMapped: false\n      })\n    );\n    __publicField(this, \"isTransformControlsPlane\", true);\n    __publicField(this, \"type\", \"TransformControlsPlane\");\n    __publicField(this, \"unitX\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1));\n    __publicField(this, \"tempVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"dirVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"alignVector\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"tempMatrix\", new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4());\n    __publicField(this, \"identityQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    // these are set from parent class TransformControls\n    __publicField(this, \"cameraQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"worldPosition\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"worldQuaternion\", new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion());\n    __publicField(this, \"eye\", new three__WEBPACK_IMPORTED_MODULE_0__.Vector3());\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === \"scale\")\n        space = \"local\";\n      this.unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.alignVector.copy(this.unitY);\n      switch (this.mode) {\n        case \"translate\":\n        case \"scale\":\n          switch (this.axis) {\n            case \"X\":\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n            case \"Y\":\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n            case \"Z\":\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n            case \"XY\":\n              this.dirVector.copy(this.unitZ);\n              break;\n            case \"YZ\":\n              this.dirVector.copy(this.unitX);\n              break;\n            case \"XZ\":\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n            case \"XYZ\":\n            case \"E\":\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case \"rotate\":\n        default:\n          this.dirVector.set(0, 0, 0);\n      }\n      if (this.dirVector.length() === 0) {\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n      super.updateMatrixWorld();\n    });\n  }\n}\n\n//# sourceMappingURL=TransformControls.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/three-stdlib/controls/TransformControls.js\n");

/***/ })

};
;