"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/material.tsx":
/*!******************************!*\
  !*** ./src/app/material.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoiseShaderMaterial: function() { return /* binding */ NoiseShaderMaterial; }\n/* harmony export */ });\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-three/fiber */ \"(app-pages-browser)/./node_modules/@react-three/fiber/dist/events-321b05fb.esm.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-three/drei */ \"(app-pages-browser)/./node_modules/@react-three/drei/core/shaderMaterial.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n// materials.tsx\n/* __next_internal_client_entry_do_not_use__ NoiseShaderMaterial auto */ // Import necessary dependencies\n\n\n\n// Create a shader material for noise effect\n// shaderMaterial takes three arguments: uniforms, vertex shader, and fragment shader\nconst NoiseShaderMaterial = (0,_react_three_drei__WEBPACK_IMPORTED_MODULE_0__.shaderMaterial)(// 1. Uniforms: Variables that can be updated from JavaScript\n{\n    time: 0,\n    color: new three__WEBPACK_IMPORTED_MODULE_1__.Color(0.0, 0.0, 0.0),\n    positionIndex: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(0, 0),\n    totalCubes: new three__WEBPACK_IMPORTED_MODULE_1__.Vector2(50, 50),\n    depthIndex: 0\n}, \"\\n   varying vec2 vUv; // declare varying to pass to fragment shader\\n   \\n   void main() {\\n     vUv = uv; // pass UVs to fragment shader\\n     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n   }\\n \", \"\\n  uniform float time; // receive time uniform\\n  uniform vec3 color; // receive color uniform\\n  varying vec2 vUv;   // receive UVs from vertex shader\\n      uniform float depthIndex;  // Add this uniform\\n\\n\\n  \\n\\n  // Random noise function\\n  float noise(vec2 p) {\\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233))) * 43758.5453123);\\n  }\\n\\n    vec3 getBaseColor(vec2 position, float depth) {\\n    vec2 normalizedPos = position / totalCubes;\\n\\n    // diff colors sets for each depth\\n    vec3 colors[3] = vec3[3](\\n        vec3(0.0, 0.5, 0.3), // layer 1 colors\\n        vec3(0.4, 0.0., 0.8), // layer 2\\n        vec3(0.8, 0.0, 0.0) // third layer \\n    );\\n\\n    vec3 baseColor1 = colors[int(depth)];\\n    vec3 baseColor2 = baseColor1 + vec3(0.2, 0.2, 0.2);\\n    vec3 baseColor3 = baseColor2 + vec3(0.2, 0.2, 0.2);\\n\\n    vec3 horizontalGradient = mix(baseColor1, baseColor2, normalizedPos.x);\\n    vec3 veritcalGradient = mix(baseColor2, baseColor3, normalizedPos.y);\\n\\n    return mix(horizontalGradient, verticalGradient, 0.5);\\n    }\\n\\n  void main() {\\n    vec2 uv = vUv;\\n    \\n    // Create animated noise pattern\\n    float n = noise(uv * 10.0 + time);\\n    \\n    // Define gradient colors\\n    vec3 color1 = vec3(0.0, 0.5, 0.3); // Pink/red\\n    vec3 color2 = vec3(0.2, 0.0, 0.5); // Deep purple\\n    \\n    // Mix colors based on noise\\n    vec3 finalColor = mix(color1, color2, n);\\n    \\n    // Output final color\\n    gl_FragColor = vec4(finalColor, 1.0);\\n  }\\n\");\n// make material avaibale in React Three Fiber\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_2__.e)({\n    NoiseShaderMaterial\n});\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbWF0ZXJpYWwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxnQkFBZ0I7eUVBR2hCLGdDQUFnQztBQUNZO0FBQ087QUFDcEI7QUFFL0IsNENBQTRDO0FBQzVDLHFGQUFxRjtBQUNyRixNQUFNRyxzQkFBc0JGLGlFQUFjQSxDQUN4Qyw2REFBNkQ7QUFDN0Q7SUFDRUcsTUFBTTtJQUNOQyxPQUFPLElBQUlILHdDQUFXLENBQUMsS0FBSyxLQUFLO0lBQ2pDSyxlQUFlLElBQUlMLDBDQUFhLENBQUMsR0FBRztJQUNwQ08sWUFBWSxJQUFJUCwwQ0FBYSxDQUFDLElBQUk7SUFDbENRLFlBQVk7QUFDZCxHQUlDLHFPQVdBO0FBcURILDhDQUE4QztBQUM5Q1YscURBQU1BLENBQUM7SUFBRUc7QUFBb0I7QUFjRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL21hdGVyaWFsLnRzeD9jOWFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIG1hdGVyaWFscy50c3hcblwidXNlIGNsaWVudFwiO1xuXG4vLyBJbXBvcnQgbmVjZXNzYXJ5IGRlcGVuZGVuY2llc1xuaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSBcIkByZWFjdC10aHJlZS9maWJlclwiO1xuaW1wb3J0IHsgc2hhZGVyTWF0ZXJpYWwgfSBmcm9tIFwiQHJlYWN0LXRocmVlL2RyZWlcIjtcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuXG4vLyBDcmVhdGUgYSBzaGFkZXIgbWF0ZXJpYWwgZm9yIG5vaXNlIGVmZmVjdFxuLy8gc2hhZGVyTWF0ZXJpYWwgdGFrZXMgdGhyZWUgYXJndW1lbnRzOiB1bmlmb3JtcywgdmVydGV4IHNoYWRlciwgYW5kIGZyYWdtZW50IHNoYWRlclxuY29uc3QgTm9pc2VTaGFkZXJNYXRlcmlhbCA9IHNoYWRlck1hdGVyaWFsKFxuICAvLyAxLiBVbmlmb3JtczogVmFyaWFibGVzIHRoYXQgY2FuIGJlIHVwZGF0ZWQgZnJvbSBKYXZhU2NyaXB0XG4gIHtcbiAgICB0aW1lOiAwLCAvLyBXaWxsIGJlIHVzZWQgdG8gYW5pbWF0ZSB0aGUgbm9pc2VcbiAgICBjb2xvcjogbmV3IFRIUkVFLkNvbG9yKDAuMCwgMC4wLCAwLjApLFxuICAgIHBvc2l0aW9uSW5kZXg6IG5ldyBUSFJFRS5WZWN0b3IyKDAsIDApLCAvLyBjcmVhdGVzIGEgMkQgdmVjdG9yIHRvIHN0b3JlIGN1YmUncyBwb3NpdGlvblxuICAgIHRvdGFsQ3ViZXM6IG5ldyBUSFJFRS5WZWN0b3IyKDUwLCA1MCksIC8vIHN0b3JlIHRvdGFsIGdyaWQgc2l6ZSAoMTAsIDEwKSAtPiB4LSBjb2x1bW5zICwgeS0gcm93c1xuICAgIGRlcHRoSW5kZXg6IDAsIC8vIHogaW5kZXhcbiAgfSxcblxuICAvLyAyLiBWZXJ0ZXggU2hhZGVyOiBIYW5kbGVzIHRoZSBwb3NpdGlvbi9nZW9tZXRyeSBvZiB0aGUgbWVzaCAtLSBwcm9jZXNzZXMgZWFjaCB2ZXJ0ZXggb2YgdGhlIGdlb21ldHJ5XG4gIC8vIHBhc3NlcyBVViBjb29yZGluYXRlcyB0byB0aGUgZnJhZ21lbnQgc2hhZGVyXG4gIGBcbiAgIHZhcnlpbmcgdmVjMiB2VXY7IC8vIGRlY2xhcmUgdmFyeWluZyB0byBwYXNzIHRvIGZyYWdtZW50IHNoYWRlclxuICAgXG4gICB2b2lkIG1haW4oKSB7XG4gICAgIHZVdiA9IHV2OyAvLyBwYXNzIFVWcyB0byBmcmFnbWVudCBzaGFkZXJcbiAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcbiAgIH1cbiBgLFxuXG4gIC8vIDMuIEZyYWdtZW50IFNoYWRlcjogSGFuZGxlcyB0aGUgY29sb3IvcGl4ZWwgZGF0YVxuICAvLyBUaGlzIGNyZWF0ZXMgb3VyIG5vaXNlIHBhdHRlcm4gYW5kIGdyYWRpZW50IGVmZmVjdFxuICBgXG4gIHVuaWZvcm0gZmxvYXQgdGltZTsgLy8gcmVjZWl2ZSB0aW1lIHVuaWZvcm1cbiAgdW5pZm9ybSB2ZWMzIGNvbG9yOyAvLyByZWNlaXZlIGNvbG9yIHVuaWZvcm1cbiAgdmFyeWluZyB2ZWMyIHZVdjsgICAvLyByZWNlaXZlIFVWcyBmcm9tIHZlcnRleCBzaGFkZXJcbiAgICAgIHVuaWZvcm0gZmxvYXQgZGVwdGhJbmRleDsgIC8vIEFkZCB0aGlzIHVuaWZvcm1cblxuXG4gIFxuXG4gIC8vIFJhbmRvbSBub2lzZSBmdW5jdGlvblxuICBmbG9hdCBub2lzZSh2ZWMyIHApIHtcbiAgICByZXR1cm4gZnJhY3Qoc2luKGRvdChwLnh5LCB2ZWMyKDEyLjk4OTgsNzguMjMzKSkpICogNDM3NTguNTQ1MzEyMyk7XG4gIH1cblxuICAgIHZlYzMgZ2V0QmFzZUNvbG9yKHZlYzIgcG9zaXRpb24sIGZsb2F0IGRlcHRoKSB7XG4gICAgdmVjMiBub3JtYWxpemVkUG9zID0gcG9zaXRpb24gLyB0b3RhbEN1YmVzO1xuXG4gICAgLy8gZGlmZiBjb2xvcnMgc2V0cyBmb3IgZWFjaCBkZXB0aFxuICAgIHZlYzMgY29sb3JzWzNdID0gdmVjM1szXShcbiAgICAgICAgdmVjMygwLjAsIDAuNSwgMC4zKSwgLy8gbGF5ZXIgMSBjb2xvcnNcbiAgICAgICAgdmVjMygwLjQsIDAuMC4sIDAuOCksIC8vIGxheWVyIDJcbiAgICAgICAgdmVjMygwLjgsIDAuMCwgMC4wKSAvLyB0aGlyZCBsYXllciBcbiAgICApO1xuXG4gICAgdmVjMyBiYXNlQ29sb3IxID0gY29sb3JzW2ludChkZXB0aCldO1xuICAgIHZlYzMgYmFzZUNvbG9yMiA9IGJhc2VDb2xvcjEgKyB2ZWMzKDAuMiwgMC4yLCAwLjIpO1xuICAgIHZlYzMgYmFzZUNvbG9yMyA9IGJhc2VDb2xvcjIgKyB2ZWMzKDAuMiwgMC4yLCAwLjIpO1xuXG4gICAgdmVjMyBob3Jpem9udGFsR3JhZGllbnQgPSBtaXgoYmFzZUNvbG9yMSwgYmFzZUNvbG9yMiwgbm9ybWFsaXplZFBvcy54KTtcbiAgICB2ZWMzIHZlcml0Y2FsR3JhZGllbnQgPSBtaXgoYmFzZUNvbG9yMiwgYmFzZUNvbG9yMywgbm9ybWFsaXplZFBvcy55KTtcblxuICAgIHJldHVybiBtaXgoaG9yaXpvbnRhbEdyYWRpZW50LCB2ZXJ0aWNhbEdyYWRpZW50LCAwLjUpO1xuICAgIH1cblxuICB2b2lkIG1haW4oKSB7XG4gICAgdmVjMiB1diA9IHZVdjtcbiAgICBcbiAgICAvLyBDcmVhdGUgYW5pbWF0ZWQgbm9pc2UgcGF0dGVyblxuICAgIGZsb2F0IG4gPSBub2lzZSh1diAqIDEwLjAgKyB0aW1lKTtcbiAgICBcbiAgICAvLyBEZWZpbmUgZ3JhZGllbnQgY29sb3JzXG4gICAgdmVjMyBjb2xvcjEgPSB2ZWMzKDAuMCwgMC41LCAwLjMpOyAvLyBQaW5rL3JlZFxuICAgIHZlYzMgY29sb3IyID0gdmVjMygwLjIsIDAuMCwgMC41KTsgLy8gRGVlcCBwdXJwbGVcbiAgICBcbiAgICAvLyBNaXggY29sb3JzIGJhc2VkIG9uIG5vaXNlXG4gICAgdmVjMyBmaW5hbENvbG9yID0gbWl4KGNvbG9yMSwgY29sb3IyLCBuKTtcbiAgICBcbiAgICAvLyBPdXRwdXQgZmluYWwgY29sb3JcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGZpbmFsQ29sb3IsIDEuMCk7XG4gIH1cbmBcbik7XG5cbi8vIG1ha2UgbWF0ZXJpYWwgYXZhaWJhbGUgaW4gUmVhY3QgVGhyZWUgRmliZXJcbmV4dGVuZCh7IE5vaXNlU2hhZGVyTWF0ZXJpYWwgfSk7XG5cbi8vIEFkZCBUeXBlU2NyaXB0IHN1cHBvcnQgZm9yIHRoZSBjdXN0b20gbWF0ZXJpYWwgaW4gSlNYXG5kZWNsYXJlIGdsb2JhbCB7XG4gIG5hbWVzcGFjZSBKU1gge1xuICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICBub2lzZVNoYWRlck1hdGVyaWFsOiBhbnk7XG4gICAgfVxuICB9XG59XG5cbi8vIEV4cG9ydCBmb3IgdXNlIGluIG90aGVyIGNvbXBvbmVudHNcbmV4cG9ydCB0eXBlIE5vaXNlU2hhZGVyTWF0ZXJpYWxJbXBsID0gdHlwZW9mIE5vaXNlU2hhZGVyTWF0ZXJpYWw7XG5cbmV4cG9ydCB7IE5vaXNlU2hhZGVyTWF0ZXJpYWwgfTtcbiJdLCJuYW1lcyI6WyJleHRlbmQiLCJzaGFkZXJNYXRlcmlhbCIsIlRIUkVFIiwiTm9pc2VTaGFkZXJNYXRlcmlhbCIsInRpbWUiLCJjb2xvciIsIkNvbG9yIiwicG9zaXRpb25JbmRleCIsIlZlY3RvcjIiLCJ0b3RhbEN1YmVzIiwiZGVwdGhJbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/material.tsx\n"));

/***/ })

});